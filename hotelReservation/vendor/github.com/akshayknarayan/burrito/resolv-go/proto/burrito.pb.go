// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/burrito.proto

package burrito

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// address type
type OpenReply_AddrType int32

const (
	OpenReply_UNIX OpenReply_AddrType = 0
	OpenReply_TCP  OpenReply_AddrType = 1
)

var OpenReply_AddrType_name = map[int32]string{
	0: "UNIX",
	1: "TCP",
}

var OpenReply_AddrType_value = map[string]int32{
	"UNIX": 0,
	"TCP":  1,
}

func (x OpenReply_AddrType) String() string {
	return proto.EnumName(OpenReply_AddrType_name, int32(x))
}

func (OpenReply_AddrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4ae8ba9b723f6816, []int{3, 0}
}

type ListenRequest struct {
	// service-level address to listen on
	ServiceAddr          string   `protobuf:"bytes,1,opt,name=service_addr,json=serviceAddr,proto3" json:"service_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ae8ba9b723f6816, []int{0}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

type ListenReply struct {
	// pipe address the service should listen at
	ListenAddr           string   `protobuf:"bytes,1,opt,name=listen_addr,json=listenAddr,proto3" json:"listen_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenReply) Reset()         { *m = ListenReply{} }
func (m *ListenReply) String() string { return proto.CompactTextString(m) }
func (*ListenReply) ProtoMessage()    {}
func (*ListenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ae8ba9b723f6816, []int{1}
}

func (m *ListenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenReply.Unmarshal(m, b)
}
func (m *ListenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenReply.Marshal(b, m, deterministic)
}
func (m *ListenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenReply.Merge(m, src)
}
func (m *ListenReply) XXX_Size() int {
	return xxx_messageInfo_ListenReply.Size(m)
}
func (m *ListenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListenReply proto.InternalMessageInfo

func (m *ListenReply) GetListenAddr() string {
	if m != nil {
		return m.ListenAddr
	}
	return ""
}

type OpenRequest struct {
	// service-level destination address of the connection
	DstAddr              string   `protobuf:"bytes,1,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ae8ba9b723f6816, []int{2}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetDstAddr() string {
	if m != nil {
		return m.DstAddr
	}
	return ""
}

type OpenReply struct {
	// pipe address to connect to
	SendAddr             string             `protobuf:"bytes,1,opt,name=send_addr,json=sendAddr,proto3" json:"send_addr,omitempty"`
	AddrType             OpenReply_AddrType `protobuf:"varint,2,opt,name=addr_type,json=addrType,proto3,enum=burrito.OpenReply_AddrType" json:"addr_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OpenReply) Reset()         { *m = OpenReply{} }
func (m *OpenReply) String() string { return proto.CompactTextString(m) }
func (*OpenReply) ProtoMessage()    {}
func (*OpenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ae8ba9b723f6816, []int{3}
}

func (m *OpenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenReply.Unmarshal(m, b)
}
func (m *OpenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenReply.Marshal(b, m, deterministic)
}
func (m *OpenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenReply.Merge(m, src)
}
func (m *OpenReply) XXX_Size() int {
	return xxx_messageInfo_OpenReply.Size(m)
}
func (m *OpenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenReply proto.InternalMessageInfo

func (m *OpenReply) GetSendAddr() string {
	if m != nil {
		return m.SendAddr
	}
	return ""
}

func (m *OpenReply) GetAddrType() OpenReply_AddrType {
	if m != nil {
		return m.AddrType
	}
	return OpenReply_UNIX
}

func init() {
	proto.RegisterEnum("burrito.OpenReply_AddrType", OpenReply_AddrType_name, OpenReply_AddrType_value)
	proto.RegisterType((*ListenRequest)(nil), "burrito.ListenRequest")
	proto.RegisterType((*ListenReply)(nil), "burrito.ListenReply")
	proto.RegisterType((*OpenRequest)(nil), "burrito.OpenRequest")
	proto.RegisterType((*OpenReply)(nil), "burrito.OpenReply")
}

func init() { proto.RegisterFile("proto/burrito.proto", fileDescriptor_4ae8ba9b723f6816) }

var fileDescriptor_4ae8ba9b723f6816 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0x87, 0xad, 0x8e, 0x35, 0x7d, 0x55, 0x19, 0xcf, 0x21, 0xd3, 0x21, 0xce, 0x9e, 0x7a, 0xaa,
	0x52, 0x41, 0xbc, 0xca, 0x4e, 0x82, 0xa8, 0x94, 0x09, 0xde, 0xc6, 0xb6, 0xbc, 0x43, 0x61, 0x24,
	0x31, 0xc9, 0x06, 0x3d, 0xfa, 0x9f, 0x4b, 0xd2, 0x76, 0x56, 0x77, 0xcb, 0xfb, 0xf8, 0xde, 0xcb,
	0xef, 0x25, 0x70, 0xa6, 0xb4, 0xb4, 0xf2, 0x76, 0xb9, 0xd1, 0xba, 0xb4, 0x32, 0xf3, 0x15, 0x86,
	0x4d, 0x99, 0xe4, 0x70, 0xf2, 0x52, 0x1a, 0x4b, 0xa2, 0xa0, 0xaf, 0x0d, 0x19, 0x8b, 0x37, 0x70,
	0x6c, 0x48, 0x6f, 0xcb, 0x15, 0xcd, 0x17, 0x9c, 0xeb, 0x51, 0x30, 0x09, 0xd2, 0xa8, 0x88, 0x1b,
	0xf6, 0xc4, 0xb9, 0x4e, 0x32, 0x88, 0xdb, 0x1e, 0xb5, 0xae, 0xf0, 0x1a, 0xe2, 0xb5, 0x2f, 0xbb,
	0x0d, 0x50, 0x23, 0xef, 0xa7, 0x10, 0xbf, 0xa9, 0xdf, 0x1b, 0x2e, 0x80, 0x71, 0x63, 0xbb, 0x72,
	0xc8, 0x8d, 0xf5, 0xe6, 0x77, 0x00, 0x51, 0xad, 0xba, 0xc1, 0x63, 0x88, 0x0c, 0x09, 0xde, 0x35,
	0x99, 0x03, 0x4e, 0xc5, 0x47, 0x88, 0x1c, 0x9f, 0xdb, 0x4a, 0xd1, 0xe8, 0x70, 0x12, 0xa4, 0xa7,
	0xf9, 0x38, 0x6b, 0x97, 0xdc, 0xcd, 0xc8, 0x9c, 0x3b, 0xab, 0x14, 0x15, 0x6c, 0xd1, 0x9c, 0x92,
	0x2b, 0x60, 0x2d, 0x45, 0x06, 0xbd, 0x8f, 0xd7, 0xe7, 0xcf, 0xc1, 0x01, 0x86, 0x70, 0x34, 0x9b,
	0xbe, 0x0f, 0x82, 0x7c, 0x0b, 0x30, 0x95, 0x42, 0xd0, 0xca, 0x96, 0x52, 0xe0, 0x03, 0xf4, 0xeb,
	0x5d, 0xf1, 0x7c, 0x37, 0xfd, 0xcf, 0x83, 0x5d, 0x0e, 0xf7, 0xb8, 0xcb, 0x7e, 0x07, 0x3d, 0x17,
	0x02, 0x87, 0xff, 0x32, 0xd5, 0x3d, 0xb8, 0x9f, 0x74, 0xd9, 0xf7, 0x3f, 0x73, 0xff, 0x13, 0x00,
	0x00, 0xff, 0xff, 0x63, 0xc2, 0x6a, 0x1f, 0xb0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectionClient is the client API for Connection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectionClient interface {
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (*ListenReply, error)
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenReply, error)
}

type connectionClient struct {
	cc *grpc.ClientConn
}

func NewConnectionClient(cc *grpc.ClientConn) ConnectionClient {
	return &connectionClient{cc}
}

func (c *connectionClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (*ListenReply, error) {
	out := new(ListenReply)
	err := c.cc.Invoke(ctx, "/burrito.Connection/Listen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectionClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenReply, error) {
	out := new(OpenReply)
	err := c.cc.Invoke(ctx, "/burrito.Connection/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectionServer is the server API for Connection service.
type ConnectionServer interface {
	Listen(context.Context, *ListenRequest) (*ListenReply, error)
	Open(context.Context, *OpenRequest) (*OpenReply, error)
}

// UnimplementedConnectionServer can be embedded to have forward compatible implementations.
type UnimplementedConnectionServer struct {
}

func (*UnimplementedConnectionServer) Listen(ctx context.Context, req *ListenRequest) (*ListenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedConnectionServer) Open(ctx context.Context, req *OpenRequest) (*OpenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}

func RegisterConnectionServer(s *grpc.Server, srv ConnectionServer) {
	s.RegisterService(&_Connection_serviceDesc, srv)
}

func _Connection_Listen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectionServer).Listen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/burrito.Connection/Listen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectionServer).Listen(ctx, req.(*ListenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connection_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectionServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/burrito.Connection/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectionServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "burrito.Connection",
	HandlerType: (*ConnectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Listen",
			Handler:    _Connection_Listen_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _Connection_Open_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/burrito.proto",
}
